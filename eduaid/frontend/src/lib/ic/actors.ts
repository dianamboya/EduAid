/* eslint-disable @typescript-eslint/ban-ts-comment */
import { HttpAgent, Actor } from "@dfinity/agent";
import { AuthClient } from "@dfinity/auth-client";
// @ts-ignore - generated by `dfx generate`
import { idlFactory as userProfilesIDL } from "../../declarations/user_profiles/user_profiles.did.js";
// @ts-ignore
import canisterIds from "../../../canister_ids.json";


export type CreateActorOpts = { identity?: any };


export async function getAuthClient() {
return await AuthClient.create();
}


export async function createUserProfilesActor(opts: CreateActorOpts = {}) {
const { identity } = opts;
const agent = new HttpAgent({ identity });
if (process.env.NODE_ENV !== "production") {
// Why: Local replica needs root key for certificate validation.
await agent.fetchRootKey().catch(() => undefined);
}
const canisterId = (canisterIds as any).user_profiles.local ?? (canisterIds as any).user_profiles.ic;
return Actor.createActor(userProfilesIDL, { agent, canisterId });
}