type UserProfiles = 
 service {
   /// One-time: set the caller as the first admin.
   bootstrapAdmin: () -> (bool);
   /// Fetch a profile for a given user.
   getProfile: (principal) -> (opt Profile) query;
   /// Grant a role (admin only).
   grantRole: (principal, text) -> (opt Profile);
   /// Admins can list all profiles.
   listProfiles: () -> (vec record {
                              principal;
                              Profile;
                            });
   /// Register a new user profile (from Registration.tsx).
   registerUser: (ProfileInput) -> (Profile);
   /// Update last login timestamp (from Login.tsx).
   updateLastLogin: () -> (opt Profile);
 };
type Timestamp = nat64;
type ProfileInput = 
 record {
   country: opt text;
   email: opt text;
   phone: opt text;
   roles: opt vec text;
   username: text;
 };
type Profile = 
 record {
   country: opt text;
   createdAt: Timestamp;
   email: opt text;
   lastLogin: Timestamp;
   phone: opt text;
   roles: vec text;
   username: text;
 };
service : () -> UserProfiles
